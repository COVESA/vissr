// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: VISSv2.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package grpcProtobufMessages;

@kotlin.jvm.JvmName("-initializesubscribeStreamMessage")
public inline fun subscribeStreamMessage(block: grpcProtobufMessages.SubscribeStreamMessageKt.Dsl.() -> kotlin.Unit): grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage =
  grpcProtobufMessages.SubscribeStreamMessageKt.Dsl._create(grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `grpcProtobufMessages.SubscribeStreamMessage`
 */
public object SubscribeStreamMessageKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage = _builder.build()

    /**
     * `.grpcProtobufMessages.SubscribeResponseType MType = 1;`
     */
    public var mType: grpcProtobufMessages.VISSv2OuterClass.SubscribeResponseType
      @JvmName("getMType")
      get() = _builder.getMType()
      @JvmName("setMType")
      set(value) {
        _builder.setMType(value)
      }
    public var mTypeValue: kotlin.Int
      @JvmName("getMTypeValue")
      get() = _builder.getMTypeValue()
      @JvmName("setMTypeValue")
      set(value) {
        _builder.setMTypeValue(value)
      }
    /**
     * `.grpcProtobufMessages.SubscribeResponseType MType = 1;`
     */
    public fun clearMType() {
      _builder.clearMType()
    }

    /**
     * `.grpcProtobufMessages.ResponseStatus Status = 2;`
     */
    public var status: grpcProtobufMessages.VISSv2OuterClass.ResponseStatus
      @JvmName("getStatus")
      get() = _builder.getStatus()
      @JvmName("setStatus")
      set(value) {
        _builder.setStatus(value)
      }
    public var statusValue: kotlin.Int
      @JvmName("getStatusValue")
      get() = _builder.getStatusValue()
      @JvmName("setStatusValue")
      set(value) {
        _builder.setStatusValue(value)
      }
    /**
     * `.grpcProtobufMessages.ResponseStatus Status = 2;`
     */
    public fun clearStatus() {
      _builder.clearStatus()
    }

    /**
     * `optional .grpcProtobufMessages.SubscribeStreamMessage.SubscribeResponseMessage Response = 3;`
     */
    public var response: grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeResponseMessage
      @JvmName("getResponse")
      get() = _builder.getResponse()
      @JvmName("setResponse")
      set(value) {
        _builder.setResponse(value)
      }
    /**
     * `optional .grpcProtobufMessages.SubscribeStreamMessage.SubscribeResponseMessage Response = 3;`
     */
    public fun clearResponse() {
      _builder.clearResponse()
    }
    /**
     * `optional .grpcProtobufMessages.SubscribeStreamMessage.SubscribeResponseMessage Response = 3;`
     * @return Whether the response field is set.
     */
    public fun hasResponse(): kotlin.Boolean {
      return _builder.hasResponse()
    }
    public val SubscribeStreamMessageKt.Dsl.responseOrNull: grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeResponseMessage?
      get() = _builder.responseOrNull

    /**
     * `optional .grpcProtobufMessages.SubscribeStreamMessage.SubscribeEventMessage Event = 4;`
     */
    public var event: grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeEventMessage
      @JvmName("getEvent")
      get() = _builder.getEvent()
      @JvmName("setEvent")
      set(value) {
        _builder.setEvent(value)
      }
    /**
     * `optional .grpcProtobufMessages.SubscribeStreamMessage.SubscribeEventMessage Event = 4;`
     */
    public fun clearEvent() {
      _builder.clearEvent()
    }
    /**
     * `optional .grpcProtobufMessages.SubscribeStreamMessage.SubscribeEventMessage Event = 4;`
     * @return Whether the event field is set.
     */
    public fun hasEvent(): kotlin.Boolean {
      return _builder.hasEvent()
    }
    public val SubscribeStreamMessageKt.Dsl.eventOrNull: grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeEventMessage?
      get() = _builder.eventOrNull
  }
  @kotlin.jvm.JvmName("-initializesubscribeResponseMessage")
  public inline fun subscribeResponseMessage(block: grpcProtobufMessages.SubscribeStreamMessageKt.SubscribeResponseMessageKt.Dsl.() -> kotlin.Unit): grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeResponseMessage =
    grpcProtobufMessages.SubscribeStreamMessageKt.SubscribeResponseMessageKt.Dsl._create(grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeResponseMessage.newBuilder()).apply { block() }._build()
  /**
   * Protobuf type `grpcProtobufMessages.SubscribeStreamMessage.SubscribeResponseMessage`
   */
  public object SubscribeResponseMessageKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeResponseMessage.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeResponseMessage.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeResponseMessage = _builder.build()

      /**
       * `optional .grpcProtobufMessages.ErrorResponseMessage ErrorResponse = 1;`
       */
      public var errorResponse: grpcProtobufMessages.VISSv2OuterClass.ErrorResponseMessage
        @JvmName("getErrorResponse")
        get() = _builder.getErrorResponse()
        @JvmName("setErrorResponse")
        set(value) {
          _builder.setErrorResponse(value)
        }
      /**
       * `optional .grpcProtobufMessages.ErrorResponseMessage ErrorResponse = 1;`
       */
      public fun clearErrorResponse() {
        _builder.clearErrorResponse()
      }
      /**
       * `optional .grpcProtobufMessages.ErrorResponseMessage ErrorResponse = 1;`
       * @return Whether the errorResponse field is set.
       */
      public fun hasErrorResponse(): kotlin.Boolean {
        return _builder.hasErrorResponse()
      }
      public val SubscribeResponseMessageKt.Dsl.errorResponseOrNull: grpcProtobufMessages.VISSv2OuterClass.ErrorResponseMessage?
        get() = _builder.errorResponseOrNull

      /**
       * `string SubscriptionId = 2;`
       */
      public var subscriptionId: kotlin.String
        @JvmName("getSubscriptionId")
        get() = _builder.getSubscriptionId()
        @JvmName("setSubscriptionId")
        set(value) {
          _builder.setSubscriptionId(value)
        }
      /**
       * `string SubscriptionId = 2;`
       */
      public fun clearSubscriptionId() {
        _builder.clearSubscriptionId()
      }

      /**
       * `string RequestId = 3;`
       */
      public var requestId: kotlin.String
        @JvmName("getRequestId")
        get() = _builder.getRequestId()
        @JvmName("setRequestId")
        set(value) {
          _builder.setRequestId(value)
        }
      /**
       * `string RequestId = 3;`
       */
      public fun clearRequestId() {
        _builder.clearRequestId()
      }

      /**
       * `string Ts = 4;`
       */
      public var ts: kotlin.String
        @JvmName("getTs")
        get() = _builder.getTs()
        @JvmName("setTs")
        set(value) {
          _builder.setTs(value)
        }
      /**
       * `string Ts = 4;`
       */
      public fun clearTs() {
        _builder.clearTs()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializesubscribeEventMessage")
  public inline fun subscribeEventMessage(block: grpcProtobufMessages.SubscribeStreamMessageKt.SubscribeEventMessageKt.Dsl.() -> kotlin.Unit): grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeEventMessage =
    grpcProtobufMessages.SubscribeStreamMessageKt.SubscribeEventMessageKt.Dsl._create(grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeEventMessage.newBuilder()).apply { block() }._build()
  /**
   * Protobuf type `grpcProtobufMessages.SubscribeStreamMessage.SubscribeEventMessage`
   */
  public object SubscribeEventMessageKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeEventMessage.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeEventMessage.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeEventMessage = _builder.build()

      /**
       * `string SubscriptionId = 1;`
       */
      public var subscriptionId: kotlin.String
        @JvmName("getSubscriptionId")
        get() = _builder.getSubscriptionId()
        @JvmName("setSubscriptionId")
        set(value) {
          _builder.setSubscriptionId(value)
        }
      /**
       * `string SubscriptionId = 1;`
       */
      public fun clearSubscriptionId() {
        _builder.clearSubscriptionId()
      }

      /**
       * `optional .grpcProtobufMessages.SubscribeStreamMessage.SubscribeEventMessage.SuccessResponseMessage SuccessResponse = 2;`
       */
      public var successResponse: grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeEventMessage.SuccessResponseMessage
        @JvmName("getSuccessResponse")
        get() = _builder.getSuccessResponse()
        @JvmName("setSuccessResponse")
        set(value) {
          _builder.setSuccessResponse(value)
        }
      /**
       * `optional .grpcProtobufMessages.SubscribeStreamMessage.SubscribeEventMessage.SuccessResponseMessage SuccessResponse = 2;`
       */
      public fun clearSuccessResponse() {
        _builder.clearSuccessResponse()
      }
      /**
       * `optional .grpcProtobufMessages.SubscribeStreamMessage.SubscribeEventMessage.SuccessResponseMessage SuccessResponse = 2;`
       * @return Whether the successResponse field is set.
       */
      public fun hasSuccessResponse(): kotlin.Boolean {
        return _builder.hasSuccessResponse()
      }
      public val SubscribeEventMessageKt.Dsl.successResponseOrNull: grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeEventMessage.SuccessResponseMessage?
        get() = _builder.successResponseOrNull

      /**
       * `optional .grpcProtobufMessages.ErrorResponseMessage ErrorResponse = 3;`
       */
      public var errorResponse: grpcProtobufMessages.VISSv2OuterClass.ErrorResponseMessage
        @JvmName("getErrorResponse")
        get() = _builder.getErrorResponse()
        @JvmName("setErrorResponse")
        set(value) {
          _builder.setErrorResponse(value)
        }
      /**
       * `optional .grpcProtobufMessages.ErrorResponseMessage ErrorResponse = 3;`
       */
      public fun clearErrorResponse() {
        _builder.clearErrorResponse()
      }
      /**
       * `optional .grpcProtobufMessages.ErrorResponseMessage ErrorResponse = 3;`
       * @return Whether the errorResponse field is set.
       */
      public fun hasErrorResponse(): kotlin.Boolean {
        return _builder.hasErrorResponse()
      }
      public val SubscribeEventMessageKt.Dsl.errorResponseOrNull: grpcProtobufMessages.VISSv2OuterClass.ErrorResponseMessage?
        get() = _builder.errorResponseOrNull

      /**
       * `optional string Ts = 4;`
       */
      public var ts: kotlin.String
        @JvmName("getTs")
        get() = _builder.getTs()
        @JvmName("setTs")
        set(value) {
          _builder.setTs(value)
        }
      /**
       * `optional string Ts = 4;`
       */
      public fun clearTs() {
        _builder.clearTs()
      }
      /**
       * `optional string Ts = 4;`
       * @return Whether the ts field is set.
       */
      public fun hasTs(): kotlin.Boolean {
        return _builder.hasTs()
      }

      /**
       * <code>optional int32 TsC = 5;</code>
       */
      public var tsC: kotlin.Int
        @JvmName("getTsC")
        get() = _builder.getTsC()
        @JvmName("setTsC")
        set(value) {
          _builder.setTsC(value)
        }
      /**
       * `optional int32 TsC = 5;`
       */
      public fun clearTsC() {
        _builder.clearTsC()
      }
      /**
       * `optional int32 TsC = 5;`
       * @return Whether the tsC field is set.
       */
      public fun hasTsC(): kotlin.Boolean {
        return _builder.hasTsC()
      }
    }
    @kotlin.jvm.JvmName("-initializesuccessResponseMessage")
    public inline fun successResponseMessage(block: grpcProtobufMessages.SubscribeStreamMessageKt.SubscribeEventMessageKt.SuccessResponseMessageKt.Dsl.() -> kotlin.Unit): grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeEventMessage.SuccessResponseMessage =
      grpcProtobufMessages.SubscribeStreamMessageKt.SubscribeEventMessageKt.SuccessResponseMessageKt.Dsl._create(grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeEventMessage.SuccessResponseMessage.newBuilder()).apply { block() }._build()
    /**
     * Protobuf type `grpcProtobufMessages.SubscribeStreamMessage.SubscribeEventMessage.SuccessResponseMessage`
     */
    public object SuccessResponseMessageKt {
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      @com.google.protobuf.kotlin.ProtoDslMarker
      public class Dsl private constructor(
        private val _builder: grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeEventMessage.SuccessResponseMessage.Builder
      ) {
        public companion object {
          @kotlin.jvm.JvmSynthetic
          @kotlin.PublishedApi
          internal fun _create(builder: grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeEventMessage.SuccessResponseMessage.Builder): Dsl = Dsl(builder)
        }

        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _build(): grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeEventMessage.SuccessResponseMessage = _builder.build()

        /**
         * `.grpcProtobufMessages.DataPackages DataPack = 1;`
         */
        public var dataPack: grpcProtobufMessages.VISSv2OuterClass.DataPackages
          @JvmName("getDataPack")
          get() = _builder.getDataPack()
          @JvmName("setDataPack")
          set(value) {
            _builder.setDataPack(value)
          }
        /**
         * `.grpcProtobufMessages.DataPackages DataPack = 1;`
         */
        public fun clearDataPack() {
          _builder.clearDataPack()
        }
        /**
         * `.grpcProtobufMessages.DataPackages DataPack = 1;`
         * @return Whether the dataPack field is set.
         */
        public fun hasDataPack(): kotlin.Boolean {
          return _builder.hasDataPack()
        }
      }
    }
  }
}
public inline fun grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.copy(block: grpcProtobufMessages.SubscribeStreamMessageKt.Dsl.() -> kotlin.Unit): grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage =
  grpcProtobufMessages.SubscribeStreamMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public inline fun grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeResponseMessage.copy(block: grpcProtobufMessages.SubscribeStreamMessageKt.SubscribeResponseMessageKt.Dsl.() -> kotlin.Unit): grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeResponseMessage =
  grpcProtobufMessages.SubscribeStreamMessageKt.SubscribeResponseMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeResponseMessageOrBuilder.errorResponseOrNull: grpcProtobufMessages.VISSv2OuterClass.ErrorResponseMessage?
  get() = if (hasErrorResponse()) getErrorResponse() else null

public inline fun grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeEventMessage.copy(block: grpcProtobufMessages.SubscribeStreamMessageKt.SubscribeEventMessageKt.Dsl.() -> kotlin.Unit): grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeEventMessage =
  grpcProtobufMessages.SubscribeStreamMessageKt.SubscribeEventMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public inline fun grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeEventMessage.SuccessResponseMessage.copy(block: grpcProtobufMessages.SubscribeStreamMessageKt.SubscribeEventMessageKt.SuccessResponseMessageKt.Dsl.() -> kotlin.Unit): grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeEventMessage.SuccessResponseMessage =
  grpcProtobufMessages.SubscribeStreamMessageKt.SubscribeEventMessageKt.SuccessResponseMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeEventMessage.SuccessResponseMessageOrBuilder.dataPackOrNull: grpcProtobufMessages.VISSv2OuterClass.DataPackages?
  get() = if (hasDataPack()) getDataPack() else null

public val grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeEventMessageOrBuilder.successResponseOrNull: grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeEventMessage.SuccessResponseMessage?
  get() = if (hasSuccessResponse()) getSuccessResponse() else null

public val grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeEventMessageOrBuilder.errorResponseOrNull: grpcProtobufMessages.VISSv2OuterClass.ErrorResponseMessage?
  get() = if (hasErrorResponse()) getErrorResponse() else null

public val grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessageOrBuilder.responseOrNull: grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeResponseMessage?
  get() = if (hasResponse()) getResponse() else null

public val grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessageOrBuilder.eventOrNull: grpcProtobufMessages.VISSv2OuterClass.SubscribeStreamMessage.SubscribeEventMessage?
  get() = if (hasEvent()) getEvent() else null

