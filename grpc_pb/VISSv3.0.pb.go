//*
// (C) 2024 Ford Motor Company
// (C) 2021 Geotab
//
// All files and artifacts in the repository at https://github.com/covesa/vissr
// are licensed under the provisions of the license provided by the LICENSE file in this repository.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.15.8
// source: VISSv3.0.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResponseStatus int32

const (
	ResponseStatus_SUCCESS ResponseStatus = 0
	ResponseStatus_ERROR   ResponseStatus = 1
)

// Enum value maps for ResponseStatus.
var (
	ResponseStatus_name = map[int32]string{
		0: "SUCCESS",
		1: "ERROR",
	}
	ResponseStatus_value = map[string]int32{
		"SUCCESS": 0,
		"ERROR":   1,
	}
)

func (x ResponseStatus) Enum() *ResponseStatus {
	p := new(ResponseStatus)
	*p = x
	return p
}

func (x ResponseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_VISSv3_0_proto_enumTypes[0].Descriptor()
}

func (ResponseStatus) Type() protoreflect.EnumType {
	return &file_VISSv3_0_proto_enumTypes[0]
}

func (x ResponseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseStatus.Descriptor instead.
func (ResponseStatus) EnumDescriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{0}
}

type SubscribeResponseType int32

const (
	SubscribeResponseType_SUB_RESPONSE SubscribeResponseType = 0
	SubscribeResponseType_SUB_EVENT    SubscribeResponseType = 1
)

// Enum value maps for SubscribeResponseType.
var (
	SubscribeResponseType_name = map[int32]string{
		0: "SUB_RESPONSE",
		1: "SUB_EVENT",
	}
	SubscribeResponseType_value = map[string]int32{
		"SUB_RESPONSE": 0,
		"SUB_EVENT":    1,
	}
)

func (x SubscribeResponseType) Enum() *SubscribeResponseType {
	p := new(SubscribeResponseType)
	*p = x
	return p
}

func (x SubscribeResponseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscribeResponseType) Descriptor() protoreflect.EnumDescriptor {
	return file_VISSv3_0_proto_enumTypes[1].Descriptor()
}

func (SubscribeResponseType) Type() protoreflect.EnumType {
	return &file_VISSv3_0_proto_enumTypes[1]
}

func (x SubscribeResponseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubscribeResponseType.Descriptor instead.
func (SubscribeResponseType) EnumDescriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{1}
}

type MessageMethod int32

const (
	MessageMethod_GET         MessageMethod = 0
	MessageMethod_SET         MessageMethod = 1
	MessageMethod_SUBSCRIBE   MessageMethod = 2
	MessageMethod_UNSUBSCRIBE MessageMethod = 3
)

// Enum value maps for MessageMethod.
var (
	MessageMethod_name = map[int32]string{
		0: "GET",
		1: "SET",
		2: "SUBSCRIBE",
		3: "UNSUBSCRIBE",
	}
	MessageMethod_value = map[string]int32{
		"GET":         0,
		"SET":         1,
		"SUBSCRIBE":   2,
		"UNSUBSCRIBE": 3,
	}
)

func (x MessageMethod) Enum() *MessageMethod {
	p := new(MessageMethod)
	*p = x
	return p
}

func (x MessageMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_VISSv3_0_proto_enumTypes[2].Descriptor()
}

func (MessageMethod) Type() protoreflect.EnumType {
	return &file_VISSv3_0_proto_enumTypes[2]
}

func (x MessageMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageMethod.Descriptor instead.
func (MessageMethod) EnumDescriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{2}
}

type MessageType int32

const (
	MessageType_REQUEST  MessageType = 0
	MessageType_RESPONSE MessageType = 1
	MessageType_STREAM   MessageType = 2
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "REQUEST",
		1: "RESPONSE",
		2: "STREAM",
	}
	MessageType_value = map[string]int32{
		"REQUEST":  0,
		"RESPONSE": 1,
		"STREAM":   2,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_VISSv3_0_proto_enumTypes[3].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_VISSv3_0_proto_enumTypes[3]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{3}
}

type FilterExpressions_FilterExpression_FilterVariant int32

const (
	FilterExpressions_FilterExpression_PATHS     FilterExpressions_FilterExpression_FilterVariant = 0
	FilterExpressions_FilterExpression_TIMEBASED FilterExpressions_FilterExpression_FilterVariant = 1
	FilterExpressions_FilterExpression_RANGE     FilterExpressions_FilterExpression_FilterVariant = 2
	FilterExpressions_FilterExpression_CHANGE    FilterExpressions_FilterExpression_FilterVariant = 3
	FilterExpressions_FilterExpression_CURVELOG  FilterExpressions_FilterExpression_FilterVariant = 4
	FilterExpressions_FilterExpression_HISTORY   FilterExpressions_FilterExpression_FilterVariant = 5
	FilterExpressions_FilterExpression_METADATA  FilterExpressions_FilterExpression_FilterVariant = 6
)

// Enum value maps for FilterExpressions_FilterExpression_FilterVariant.
var (
	FilterExpressions_FilterExpression_FilterVariant_name = map[int32]string{
		0: "PATHS",
		1: "TIMEBASED",
		2: "RANGE",
		3: "CHANGE",
		4: "CURVELOG",
		5: "HISTORY",
		6: "METADATA",
	}
	FilterExpressions_FilterExpression_FilterVariant_value = map[string]int32{
		"PATHS":     0,
		"TIMEBASED": 1,
		"RANGE":     2,
		"CHANGE":    3,
		"CURVELOG":  4,
		"HISTORY":   5,
		"METADATA":  6,
	}
)

func (x FilterExpressions_FilterExpression_FilterVariant) Enum() *FilterExpressions_FilterExpression_FilterVariant {
	p := new(FilterExpressions_FilterExpression_FilterVariant)
	*p = x
	return p
}

func (x FilterExpressions_FilterExpression_FilterVariant) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterExpressions_FilterExpression_FilterVariant) Descriptor() protoreflect.EnumDescriptor {
	return file_VISSv3_0_proto_enumTypes[4].Descriptor()
}

func (FilterExpressions_FilterExpression_FilterVariant) Type() protoreflect.EnumType {
	return &file_VISSv3_0_proto_enumTypes[4]
}

func (x FilterExpressions_FilterExpression_FilterVariant) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterExpressions_FilterExpression_FilterVariant.Descriptor instead.
func (FilterExpressions_FilterExpression_FilterVariant) EnumDescriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{1, 0, 0}
}

type ErrorResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number  string  `protobuf:"bytes,1,opt,name=Number,proto3" json:"Number,omitempty"`
	Reason  *string `protobuf:"bytes,2,opt,name=Reason,proto3,oneof" json:"Reason,omitempty"`
	Message *string `protobuf:"bytes,3,opt,name=Message,proto3,oneof" json:"Message,omitempty"`
}

func (x *ErrorResponseMessage) Reset() {
	*x = ErrorResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponseMessage) ProtoMessage() {}

func (x *ErrorResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponseMessage.ProtoReflect.Descriptor instead.
func (*ErrorResponseMessage) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorResponseMessage) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *ErrorResponseMessage) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *ErrorResponseMessage) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type FilterExpressions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilterExp []*FilterExpressions_FilterExpression `protobuf:"bytes,1,rep,name=FilterExp,proto3" json:"FilterExp,omitempty"`
}

func (x *FilterExpressions) Reset() {
	*x = FilterExpressions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExpressions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExpressions) ProtoMessage() {}

func (x *FilterExpressions) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExpressions.ProtoReflect.Descriptor instead.
func (*FilterExpressions) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{1}
}

func (x *FilterExpressions) GetFilterExp() []*FilterExpressions_FilterExpression {
	if x != nil {
		return x.FilterExp
	}
	return nil
}

type DataPackages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*DataPackages_DataPackage `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *DataPackages) Reset() {
	*x = DataPackages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPackages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPackages) ProtoMessage() {}

func (x *DataPackages) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPackages.ProtoReflect.Descriptor instead.
func (*DataPackages) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{2}
}

func (x *DataPackages) GetData() []*DataPackages_DataPackage {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetRequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path            string             `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Filter          *FilterExpressions `protobuf:"bytes,2,opt,name=Filter,proto3,oneof" json:"Filter,omitempty"`
	Authorization   *string            `protobuf:"bytes,3,opt,name=Authorization,proto3,oneof" json:"Authorization,omitempty"`
	DataCompression *string            `protobuf:"bytes,4,opt,name=DataCompression,proto3,oneof" json:"DataCompression,omitempty"`
	RequestId       *string            `protobuf:"bytes,5,opt,name=RequestId,proto3,oneof" json:"RequestId,omitempty"`
}

func (x *GetRequestMessage) Reset() {
	*x = GetRequestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestMessage) ProtoMessage() {}

func (x *GetRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestMessage.ProtoReflect.Descriptor instead.
func (*GetRequestMessage) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{3}
}

func (x *GetRequestMessage) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetRequestMessage) GetFilter() *FilterExpressions {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *GetRequestMessage) GetAuthorization() string {
	if x != nil && x.Authorization != nil {
		return *x.Authorization
	}
	return ""
}

func (x *GetRequestMessage) GetDataCompression() string {
	if x != nil && x.DataCompression != nil {
		return *x.DataCompression
	}
	return ""
}

func (x *GetRequestMessage) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

type GetResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          ResponseStatus                             `protobuf:"varint,1,opt,name=Status,proto3,enum=grpcProtobufMessages.ResponseStatus" json:"Status,omitempty"`
	SuccessResponse *GetResponseMessage_SuccessResponseMessage `protobuf:"bytes,2,opt,name=SuccessResponse,proto3,oneof" json:"SuccessResponse,omitempty"`
	ErrorResponse   *ErrorResponseMessage                      `protobuf:"bytes,3,opt,name=ErrorResponse,proto3,oneof" json:"ErrorResponse,omitempty"`
	RequestId       *string                                    `protobuf:"bytes,4,opt,name=RequestId,proto3,oneof" json:"RequestId,omitempty"`
	Ts              string                                     `protobuf:"bytes,5,opt,name=Ts,proto3" json:"Ts,omitempty"`
	Authorization   *string                                    `protobuf:"bytes,6,opt,name=Authorization,proto3,oneof" json:"Authorization,omitempty"`
}

func (x *GetResponseMessage) Reset() {
	*x = GetResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponseMessage) ProtoMessage() {}

func (x *GetResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponseMessage.ProtoReflect.Descriptor instead.
func (*GetResponseMessage) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{4}
}

func (x *GetResponseMessage) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_SUCCESS
}

func (x *GetResponseMessage) GetSuccessResponse() *GetResponseMessage_SuccessResponseMessage {
	if x != nil {
		return x.SuccessResponse
	}
	return nil
}

func (x *GetResponseMessage) GetErrorResponse() *ErrorResponseMessage {
	if x != nil {
		return x.ErrorResponse
	}
	return nil
}

func (x *GetResponseMessage) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *GetResponseMessage) GetTs() string {
	if x != nil {
		return x.Ts
	}
	return ""
}

func (x *GetResponseMessage) GetAuthorization() string {
	if x != nil && x.Authorization != nil {
		return *x.Authorization
	}
	return ""
}

type SetRequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path          string  `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Value         string  `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	Authorization *string `protobuf:"bytes,3,opt,name=Authorization,proto3,oneof" json:"Authorization,omitempty"`
	RequestId     *string `protobuf:"bytes,4,opt,name=RequestId,proto3,oneof" json:"RequestId,omitempty"`
}

func (x *SetRequestMessage) Reset() {
	*x = SetRequestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRequestMessage) ProtoMessage() {}

func (x *SetRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRequestMessage.ProtoReflect.Descriptor instead.
func (*SetRequestMessage) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{5}
}

func (x *SetRequestMessage) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SetRequestMessage) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SetRequestMessage) GetAuthorization() string {
	if x != nil && x.Authorization != nil {
		return *x.Authorization
	}
	return ""
}

func (x *SetRequestMessage) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

type SetResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        ResponseStatus        `protobuf:"varint,1,opt,name=Status,proto3,enum=grpcProtobufMessages.ResponseStatus" json:"Status,omitempty"`
	ErrorResponse *ErrorResponseMessage `protobuf:"bytes,2,opt,name=ErrorResponse,proto3,oneof" json:"ErrorResponse,omitempty"`
	RequestId     *string               `protobuf:"bytes,3,opt,name=RequestId,proto3,oneof" json:"RequestId,omitempty"`
	Ts            string                `protobuf:"bytes,4,opt,name=Ts,proto3" json:"Ts,omitempty"`
	Authorization *string               `protobuf:"bytes,5,opt,name=Authorization,proto3,oneof" json:"Authorization,omitempty"`
}

func (x *SetResponseMessage) Reset() {
	*x = SetResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetResponseMessage) ProtoMessage() {}

func (x *SetResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetResponseMessage.ProtoReflect.Descriptor instead.
func (*SetResponseMessage) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{6}
}

func (x *SetResponseMessage) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_SUCCESS
}

func (x *SetResponseMessage) GetErrorResponse() *ErrorResponseMessage {
	if x != nil {
		return x.ErrorResponse
	}
	return nil
}

func (x *SetResponseMessage) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *SetResponseMessage) GetTs() string {
	if x != nil {
		return x.Ts
	}
	return ""
}

func (x *SetResponseMessage) GetAuthorization() string {
	if x != nil && x.Authorization != nil {
		return *x.Authorization
	}
	return ""
}

type SubscribeRequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path            string             `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Filter          *FilterExpressions `protobuf:"bytes,2,opt,name=Filter,proto3,oneof" json:"Filter,omitempty"`
	Authorization   *string            `protobuf:"bytes,3,opt,name=Authorization,proto3,oneof" json:"Authorization,omitempty"`
	DataCompression *string            `protobuf:"bytes,4,opt,name=DataCompression,proto3,oneof" json:"DataCompression,omitempty"`
	RequestId       string             `protobuf:"bytes,5,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
}

func (x *SubscribeRequestMessage) Reset() {
	*x = SubscribeRequestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequestMessage) ProtoMessage() {}

func (x *SubscribeRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequestMessage.ProtoReflect.Descriptor instead.
func (*SubscribeRequestMessage) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{7}
}

func (x *SubscribeRequestMessage) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SubscribeRequestMessage) GetFilter() *FilterExpressions {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *SubscribeRequestMessage) GetAuthorization() string {
	if x != nil && x.Authorization != nil {
		return *x.Authorization
	}
	return ""
}

func (x *SubscribeRequestMessage) GetDataCompression() string {
	if x != nil && x.DataCompression != nil {
		return *x.DataCompression
	}
	return ""
}

func (x *SubscribeRequestMessage) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type SubscribeStreamMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MType    SubscribeResponseType                            `protobuf:"varint,1,opt,name=MType,proto3,enum=grpcProtobufMessages.SubscribeResponseType" json:"MType,omitempty"`
	Status   ResponseStatus                                   `protobuf:"varint,2,opt,name=Status,proto3,enum=grpcProtobufMessages.ResponseStatus" json:"Status,omitempty"`
	Response *SubscribeStreamMessage_SubscribeResponseMessage `protobuf:"bytes,3,opt,name=Response,proto3,oneof" json:"Response,omitempty"`
	Event    *SubscribeStreamMessage_SubscribeEventMessage    `protobuf:"bytes,4,opt,name=Event,proto3,oneof" json:"Event,omitempty"`
}

func (x *SubscribeStreamMessage) Reset() {
	*x = SubscribeStreamMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeStreamMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeStreamMessage) ProtoMessage() {}

func (x *SubscribeStreamMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeStreamMessage.ProtoReflect.Descriptor instead.
func (*SubscribeStreamMessage) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{8}
}

func (x *SubscribeStreamMessage) GetMType() SubscribeResponseType {
	if x != nil {
		return x.MType
	}
	return SubscribeResponseType_SUB_RESPONSE
}

func (x *SubscribeStreamMessage) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_SUCCESS
}

func (x *SubscribeStreamMessage) GetResponse() *SubscribeStreamMessage_SubscribeResponseMessage {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *SubscribeStreamMessage) GetEvent() *SubscribeStreamMessage_SubscribeEventMessage {
	if x != nil {
		return x.Event
	}
	return nil
}

type UnsubscribeRequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId string  `protobuf:"bytes,1,opt,name=SubscriptionId,proto3" json:"SubscriptionId,omitempty"`
	RequestId      *string `protobuf:"bytes,2,opt,name=RequestId,proto3,oneof" json:"RequestId,omitempty"`
}

func (x *UnsubscribeRequestMessage) Reset() {
	*x = UnsubscribeRequestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeRequestMessage) ProtoMessage() {}

func (x *UnsubscribeRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeRequestMessage.ProtoReflect.Descriptor instead.
func (*UnsubscribeRequestMessage) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{9}
}

func (x *UnsubscribeRequestMessage) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *UnsubscribeRequestMessage) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

type UnsubscribeResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        ResponseStatus        `protobuf:"varint,1,opt,name=Status,proto3,enum=grpcProtobufMessages.ResponseStatus" json:"Status,omitempty"`
	ErrorResponse *ErrorResponseMessage `protobuf:"bytes,2,opt,name=ErrorResponse,proto3,oneof" json:"ErrorResponse,omitempty"`
	RequestId     *string               `protobuf:"bytes,3,opt,name=RequestId,proto3,oneof" json:"RequestId,omitempty"`
	Ts            string                `protobuf:"bytes,4,opt,name=Ts,proto3" json:"Ts,omitempty"`
}

func (x *UnsubscribeResponseMessage) Reset() {
	*x = UnsubscribeResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeResponseMessage) ProtoMessage() {}

func (x *UnsubscribeResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeResponseMessage.ProtoReflect.Descriptor instead.
func (*UnsubscribeResponseMessage) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{10}
}

func (x *UnsubscribeResponseMessage) GetStatus() ResponseStatus {
	if x != nil {
		return x.Status
	}
	return ResponseStatus_SUCCESS
}

func (x *UnsubscribeResponseMessage) GetErrorResponse() *ErrorResponseMessage {
	if x != nil {
		return x.ErrorResponse
	}
	return nil
}

func (x *UnsubscribeResponseMessage) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *UnsubscribeResponseMessage) GetTs() string {
	if x != nil {
		return x.Ts
	}
	return ""
}

type ProtobufMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method      MessageMethod       `protobuf:"varint,1,opt,name=Method,proto3,enum=grpcProtobufMessages.MessageMethod" json:"Method,omitempty"`
	Get         *GetMessage         `protobuf:"bytes,2,opt,name=Get,proto3,oneof" json:"Get,omitempty"`
	Set         *SetMessage         `protobuf:"bytes,3,opt,name=Set,proto3,oneof" json:"Set,omitempty"`
	Subscribe   *SubscribeMessage   `protobuf:"bytes,4,opt,name=Subscribe,proto3,oneof" json:"Subscribe,omitempty"`
	Unsubscribe *UnsubscribeMessage `protobuf:"bytes,5,opt,name=Unsubscribe,proto3,oneof" json:"Unsubscribe,omitempty"`
}

func (x *ProtobufMessage) Reset() {
	*x = ProtobufMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtobufMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtobufMessage) ProtoMessage() {}

func (x *ProtobufMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtobufMessage.ProtoReflect.Descriptor instead.
func (*ProtobufMessage) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{11}
}

func (x *ProtobufMessage) GetMethod() MessageMethod {
	if x != nil {
		return x.Method
	}
	return MessageMethod_GET
}

func (x *ProtobufMessage) GetGet() *GetMessage {
	if x != nil {
		return x.Get
	}
	return nil
}

func (x *ProtobufMessage) GetSet() *SetMessage {
	if x != nil {
		return x.Set
	}
	return nil
}

func (x *ProtobufMessage) GetSubscribe() *SubscribeMessage {
	if x != nil {
		return x.Subscribe
	}
	return nil
}

func (x *ProtobufMessage) GetUnsubscribe() *UnsubscribeMessage {
	if x != nil {
		return x.Unsubscribe
	}
	return nil
}

type GetMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MType    MessageType         `protobuf:"varint,1,opt,name=MType,proto3,enum=grpcProtobufMessages.MessageType" json:"MType,omitempty"`
	Request  *GetRequestMessage  `protobuf:"bytes,2,opt,name=Request,proto3,oneof" json:"Request,omitempty"`
	Response *GetResponseMessage `protobuf:"bytes,3,opt,name=Response,proto3,oneof" json:"Response,omitempty"`
}

func (x *GetMessage) Reset() {
	*x = GetMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessage) ProtoMessage() {}

func (x *GetMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessage.ProtoReflect.Descriptor instead.
func (*GetMessage) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{12}
}

func (x *GetMessage) GetMType() MessageType {
	if x != nil {
		return x.MType
	}
	return MessageType_REQUEST
}

func (x *GetMessage) GetRequest() *GetRequestMessage {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *GetMessage) GetResponse() *GetResponseMessage {
	if x != nil {
		return x.Response
	}
	return nil
}

type SetMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MType    MessageType         `protobuf:"varint,1,opt,name=MType,proto3,enum=grpcProtobufMessages.MessageType" json:"MType,omitempty"`
	Request  *SetRequestMessage  `protobuf:"bytes,2,opt,name=Request,proto3,oneof" json:"Request,omitempty"`
	Response *SetResponseMessage `protobuf:"bytes,3,opt,name=Response,proto3,oneof" json:"Response,omitempty"`
}

func (x *SetMessage) Reset() {
	*x = SetMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMessage) ProtoMessage() {}

func (x *SetMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMessage.ProtoReflect.Descriptor instead.
func (*SetMessage) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{13}
}

func (x *SetMessage) GetMType() MessageType {
	if x != nil {
		return x.MType
	}
	return MessageType_REQUEST
}

func (x *SetMessage) GetRequest() *SetRequestMessage {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *SetMessage) GetResponse() *SetResponseMessage {
	if x != nil {
		return x.Response
	}
	return nil
}

type SubscribeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MType   MessageType              `protobuf:"varint,1,opt,name=MType,proto3,enum=grpcProtobufMessages.MessageType" json:"MType,omitempty"`
	Request *SubscribeRequestMessage `protobuf:"bytes,2,opt,name=Request,proto3,oneof" json:"Request,omitempty"`
	Stream  *SubscribeStreamMessage  `protobuf:"bytes,3,opt,name=Stream,proto3,oneof" json:"Stream,omitempty"`
}

func (x *SubscribeMessage) Reset() {
	*x = SubscribeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeMessage) ProtoMessage() {}

func (x *SubscribeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeMessage.ProtoReflect.Descriptor instead.
func (*SubscribeMessage) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{14}
}

func (x *SubscribeMessage) GetMType() MessageType {
	if x != nil {
		return x.MType
	}
	return MessageType_REQUEST
}

func (x *SubscribeMessage) GetRequest() *SubscribeRequestMessage {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *SubscribeMessage) GetStream() *SubscribeStreamMessage {
	if x != nil {
		return x.Stream
	}
	return nil
}

type UnsubscribeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MType    MessageType                 `protobuf:"varint,1,opt,name=MType,proto3,enum=grpcProtobufMessages.MessageType" json:"MType,omitempty"`
	Request  *UnsubscribeRequestMessage  `protobuf:"bytes,2,opt,name=Request,proto3,oneof" json:"Request,omitempty"`
	Response *UnsubscribeResponseMessage `protobuf:"bytes,3,opt,name=Response,proto3,oneof" json:"Response,omitempty"`
}

func (x *UnsubscribeMessage) Reset() {
	*x = UnsubscribeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeMessage) ProtoMessage() {}

func (x *UnsubscribeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeMessage.ProtoReflect.Descriptor instead.
func (*UnsubscribeMessage) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{15}
}

func (x *UnsubscribeMessage) GetMType() MessageType {
	if x != nil {
		return x.MType
	}
	return MessageType_REQUEST
}

func (x *UnsubscribeMessage) GetRequest() *UnsubscribeRequestMessage {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *UnsubscribeMessage) GetResponse() *UnsubscribeResponseMessage {
	if x != nil {
		return x.Response
	}
	return nil
}

type FilterExpressions_FilterExpression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Variant FilterExpressions_FilterExpression_FilterVariant `protobuf:"varint,1,opt,name=Variant,proto3,enum=grpcProtobufMessages.FilterExpressions_FilterExpression_FilterVariant" json:"Variant,omitempty"`
	Value   *FilterExpressions_FilterExpression_FilterValue  `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *FilterExpressions_FilterExpression) Reset() {
	*x = FilterExpressions_FilterExpression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExpressions_FilterExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExpressions_FilterExpression) ProtoMessage() {}

func (x *FilterExpressions_FilterExpression) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExpressions_FilterExpression.ProtoReflect.Descriptor instead.
func (*FilterExpressions_FilterExpression) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{1, 0}
}

func (x *FilterExpressions_FilterExpression) GetVariant() FilterExpressions_FilterExpression_FilterVariant {
	if x != nil {
		return x.Variant
	}
	return FilterExpressions_FilterExpression_PATHS
}

func (x *FilterExpressions_FilterExpression) GetValue() *FilterExpressions_FilterExpression_FilterValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type FilterExpressions_FilterExpression_FilterValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValuePaths     *FilterExpressions_FilterExpression_FilterValue_PathsValue     `protobuf:"bytes,1,opt,name=ValuePaths,proto3,oneof" json:"ValuePaths,omitempty"`
	ValueTimebased *FilterExpressions_FilterExpression_FilterValue_TimebasedValue `protobuf:"bytes,2,opt,name=ValueTimebased,proto3,oneof" json:"ValueTimebased,omitempty"`
	ValueRange     []*FilterExpressions_FilterExpression_FilterValue_RangeValue   `protobuf:"bytes,3,rep,name=ValueRange,proto3" json:"ValueRange,omitempty"`
	ValueChange    *FilterExpressions_FilterExpression_FilterValue_ChangeValue    `protobuf:"bytes,4,opt,name=ValueChange,proto3,oneof" json:"ValueChange,omitempty"`
	ValueCurvelog  *FilterExpressions_FilterExpression_FilterValue_CurvelogValue  `protobuf:"bytes,5,opt,name=ValueCurvelog,proto3,oneof" json:"ValueCurvelog,omitempty"`
	ValueHistory   *FilterExpressions_FilterExpression_FilterValue_HistoryValue   `protobuf:"bytes,6,opt,name=ValueHistory,proto3,oneof" json:"ValueHistory,omitempty"`
	ValueMetadata  *FilterExpressions_FilterExpression_FilterValue_MetadataValue  `protobuf:"bytes,7,opt,name=ValueMetadata,proto3,oneof" json:"ValueMetadata,omitempty"`
}

func (x *FilterExpressions_FilterExpression_FilterValue) Reset() {
	*x = FilterExpressions_FilterExpression_FilterValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExpressions_FilterExpression_FilterValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExpressions_FilterExpression_FilterValue) ProtoMessage() {}

func (x *FilterExpressions_FilterExpression_FilterValue) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExpressions_FilterExpression_FilterValue.ProtoReflect.Descriptor instead.
func (*FilterExpressions_FilterExpression_FilterValue) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *FilterExpressions_FilterExpression_FilterValue) GetValuePaths() *FilterExpressions_FilterExpression_FilterValue_PathsValue {
	if x != nil {
		return x.ValuePaths
	}
	return nil
}

func (x *FilterExpressions_FilterExpression_FilterValue) GetValueTimebased() *FilterExpressions_FilterExpression_FilterValue_TimebasedValue {
	if x != nil {
		return x.ValueTimebased
	}
	return nil
}

func (x *FilterExpressions_FilterExpression_FilterValue) GetValueRange() []*FilterExpressions_FilterExpression_FilterValue_RangeValue {
	if x != nil {
		return x.ValueRange
	}
	return nil
}

func (x *FilterExpressions_FilterExpression_FilterValue) GetValueChange() *FilterExpressions_FilterExpression_FilterValue_ChangeValue {
	if x != nil {
		return x.ValueChange
	}
	return nil
}

func (x *FilterExpressions_FilterExpression_FilterValue) GetValueCurvelog() *FilterExpressions_FilterExpression_FilterValue_CurvelogValue {
	if x != nil {
		return x.ValueCurvelog
	}
	return nil
}

func (x *FilterExpressions_FilterExpression_FilterValue) GetValueHistory() *FilterExpressions_FilterExpression_FilterValue_HistoryValue {
	if x != nil {
		return x.ValueHistory
	}
	return nil
}

func (x *FilterExpressions_FilterExpression_FilterValue) GetValueMetadata() *FilterExpressions_FilterExpression_FilterValue_MetadataValue {
	if x != nil {
		return x.ValueMetadata
	}
	return nil
}

type FilterExpressions_FilterExpression_FilterValue_PathsValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelativePath []string `protobuf:"bytes,1,rep,name=RelativePath,proto3" json:"RelativePath,omitempty"`
}

func (x *FilterExpressions_FilterExpression_FilterValue_PathsValue) Reset() {
	*x = FilterExpressions_FilterExpression_FilterValue_PathsValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExpressions_FilterExpression_FilterValue_PathsValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExpressions_FilterExpression_FilterValue_PathsValue) ProtoMessage() {}

func (x *FilterExpressions_FilterExpression_FilterValue_PathsValue) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExpressions_FilterExpression_FilterValue_PathsValue.ProtoReflect.Descriptor instead.
func (*FilterExpressions_FilterExpression_FilterValue_PathsValue) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{1, 0, 0, 0}
}

func (x *FilterExpressions_FilterExpression_FilterValue_PathsValue) GetRelativePath() []string {
	if x != nil {
		return x.RelativePath
	}
	return nil
}

type FilterExpressions_FilterExpression_FilterValue_TimebasedValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Period string `protobuf:"bytes,1,opt,name=Period,proto3" json:"Period,omitempty"`
}

func (x *FilterExpressions_FilterExpression_FilterValue_TimebasedValue) Reset() {
	*x = FilterExpressions_FilterExpression_FilterValue_TimebasedValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExpressions_FilterExpression_FilterValue_TimebasedValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExpressions_FilterExpression_FilterValue_TimebasedValue) ProtoMessage() {}

func (x *FilterExpressions_FilterExpression_FilterValue_TimebasedValue) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExpressions_FilterExpression_FilterValue_TimebasedValue.ProtoReflect.Descriptor instead.
func (*FilterExpressions_FilterExpression_FilterValue_TimebasedValue) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{1, 0, 0, 1}
}

func (x *FilterExpressions_FilterExpression_FilterValue_TimebasedValue) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

type FilterExpressions_FilterExpression_FilterValue_RangeValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogicOperator string `protobuf:"bytes,1,opt,name=LogicOperator,proto3" json:"LogicOperator,omitempty"`
	Boundary      string `protobuf:"bytes,2,opt,name=Boundary,proto3" json:"Boundary,omitempty"`
}

func (x *FilterExpressions_FilterExpression_FilterValue_RangeValue) Reset() {
	*x = FilterExpressions_FilterExpression_FilterValue_RangeValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExpressions_FilterExpression_FilterValue_RangeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExpressions_FilterExpression_FilterValue_RangeValue) ProtoMessage() {}

func (x *FilterExpressions_FilterExpression_FilterValue_RangeValue) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExpressions_FilterExpression_FilterValue_RangeValue.ProtoReflect.Descriptor instead.
func (*FilterExpressions_FilterExpression_FilterValue_RangeValue) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{1, 0, 0, 2}
}

func (x *FilterExpressions_FilterExpression_FilterValue_RangeValue) GetLogicOperator() string {
	if x != nil {
		return x.LogicOperator
	}
	return ""
}

func (x *FilterExpressions_FilterExpression_FilterValue_RangeValue) GetBoundary() string {
	if x != nil {
		return x.Boundary
	}
	return ""
}

type FilterExpressions_FilterExpression_FilterValue_ChangeValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogicOperator string `protobuf:"bytes,1,opt,name=LogicOperator,proto3" json:"LogicOperator,omitempty"`
	Diff          string `protobuf:"bytes,2,opt,name=Diff,proto3" json:"Diff,omitempty"`
}

func (x *FilterExpressions_FilterExpression_FilterValue_ChangeValue) Reset() {
	*x = FilterExpressions_FilterExpression_FilterValue_ChangeValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExpressions_FilterExpression_FilterValue_ChangeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExpressions_FilterExpression_FilterValue_ChangeValue) ProtoMessage() {}

func (x *FilterExpressions_FilterExpression_FilterValue_ChangeValue) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExpressions_FilterExpression_FilterValue_ChangeValue.ProtoReflect.Descriptor instead.
func (*FilterExpressions_FilterExpression_FilterValue_ChangeValue) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{1, 0, 0, 3}
}

func (x *FilterExpressions_FilterExpression_FilterValue_ChangeValue) GetLogicOperator() string {
	if x != nil {
		return x.LogicOperator
	}
	return ""
}

func (x *FilterExpressions_FilterExpression_FilterValue_ChangeValue) GetDiff() string {
	if x != nil {
		return x.Diff
	}
	return ""
}

type FilterExpressions_FilterExpression_FilterValue_CurvelogValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxErr  string `protobuf:"bytes,1,opt,name=MaxErr,proto3" json:"MaxErr,omitempty"`
	BufSize string `protobuf:"bytes,2,opt,name=BufSize,proto3" json:"BufSize,omitempty"`
}

func (x *FilterExpressions_FilterExpression_FilterValue_CurvelogValue) Reset() {
	*x = FilterExpressions_FilterExpression_FilterValue_CurvelogValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExpressions_FilterExpression_FilterValue_CurvelogValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExpressions_FilterExpression_FilterValue_CurvelogValue) ProtoMessage() {}

func (x *FilterExpressions_FilterExpression_FilterValue_CurvelogValue) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExpressions_FilterExpression_FilterValue_CurvelogValue.ProtoReflect.Descriptor instead.
func (*FilterExpressions_FilterExpression_FilterValue_CurvelogValue) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{1, 0, 0, 4}
}

func (x *FilterExpressions_FilterExpression_FilterValue_CurvelogValue) GetMaxErr() string {
	if x != nil {
		return x.MaxErr
	}
	return ""
}

func (x *FilterExpressions_FilterExpression_FilterValue_CurvelogValue) GetBufSize() string {
	if x != nil {
		return x.BufSize
	}
	return ""
}

type FilterExpressions_FilterExpression_FilterValue_HistoryValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimePeriod string `protobuf:"bytes,1,opt,name=TimePeriod,proto3" json:"TimePeriod,omitempty"` //ISO8601 period expression
}

func (x *FilterExpressions_FilterExpression_FilterValue_HistoryValue) Reset() {
	*x = FilterExpressions_FilterExpression_FilterValue_HistoryValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExpressions_FilterExpression_FilterValue_HistoryValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExpressions_FilterExpression_FilterValue_HistoryValue) ProtoMessage() {}

func (x *FilterExpressions_FilterExpression_FilterValue_HistoryValue) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExpressions_FilterExpression_FilterValue_HistoryValue.ProtoReflect.Descriptor instead.
func (*FilterExpressions_FilterExpression_FilterValue_HistoryValue) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{1, 0, 0, 5}
}

func (x *FilterExpressions_FilterExpression_FilterValue_HistoryValue) GetTimePeriod() string {
	if x != nil {
		return x.TimePeriod
	}
	return ""
}

type FilterExpressions_FilterExpression_FilterValue_MetadataValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tree string `protobuf:"bytes,1,opt,name=Tree,proto3" json:"Tree,omitempty"`
}

func (x *FilterExpressions_FilterExpression_FilterValue_MetadataValue) Reset() {
	*x = FilterExpressions_FilterExpression_FilterValue_MetadataValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExpressions_FilterExpression_FilterValue_MetadataValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExpressions_FilterExpression_FilterValue_MetadataValue) ProtoMessage() {}

func (x *FilterExpressions_FilterExpression_FilterValue_MetadataValue) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExpressions_FilterExpression_FilterValue_MetadataValue.ProtoReflect.Descriptor instead.
func (*FilterExpressions_FilterExpression_FilterValue_MetadataValue) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{1, 0, 0, 6}
}

func (x *FilterExpressions_FilterExpression_FilterValue_MetadataValue) GetTree() string {
	if x != nil {
		return x.Tree
	}
	return ""
}

type DataPackages_DataPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string                                `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	Dp   []*DataPackages_DataPackage_DataPoint `protobuf:"bytes,2,rep,name=Dp,proto3" json:"Dp,omitempty"`
}

func (x *DataPackages_DataPackage) Reset() {
	*x = DataPackages_DataPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPackages_DataPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPackages_DataPackage) ProtoMessage() {}

func (x *DataPackages_DataPackage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPackages_DataPackage.ProtoReflect.Descriptor instead.
func (*DataPackages_DataPackage) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{2, 0}
}

func (x *DataPackages_DataPackage) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DataPackages_DataPackage) GetDp() []*DataPackages_DataPackage_DataPoint {
	if x != nil {
		return x.Dp
	}
	return nil
}

type DataPackages_DataPackage_DataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
	Ts    string `protobuf:"bytes,2,opt,name=Ts,proto3" json:"Ts,omitempty"`
}

func (x *DataPackages_DataPackage_DataPoint) Reset() {
	*x = DataPackages_DataPackage_DataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPackages_DataPackage_DataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPackages_DataPackage_DataPoint) ProtoMessage() {}

func (x *DataPackages_DataPackage_DataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPackages_DataPackage_DataPoint.ProtoReflect.Descriptor instead.
func (*DataPackages_DataPackage_DataPoint) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{2, 0, 0}
}

func (x *DataPackages_DataPackage_DataPoint) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DataPackages_DataPackage_DataPoint) GetTs() string {
	if x != nil {
		return x.Ts
	}
	return ""
}

type GetResponseMessage_SuccessResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataPack *DataPackages `protobuf:"bytes,1,opt,name=DataPack,proto3,oneof" json:"DataPack,omitempty"`
	Metadata *string       `protobuf:"bytes,2,opt,name=Metadata,proto3,oneof" json:"Metadata,omitempty"` // replaces DataPack in metadata variant
}

func (x *GetResponseMessage_SuccessResponseMessage) Reset() {
	*x = GetResponseMessage_SuccessResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponseMessage_SuccessResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponseMessage_SuccessResponseMessage) ProtoMessage() {}

func (x *GetResponseMessage_SuccessResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponseMessage_SuccessResponseMessage.ProtoReflect.Descriptor instead.
func (*GetResponseMessage_SuccessResponseMessage) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{4, 0}
}

func (x *GetResponseMessage_SuccessResponseMessage) GetDataPack() *DataPackages {
	if x != nil {
		return x.DataPack
	}
	return nil
}

func (x *GetResponseMessage_SuccessResponseMessage) GetMetadata() string {
	if x != nil && x.Metadata != nil {
		return *x.Metadata
	}
	return ""
}

type SubscribeStreamMessage_SubscribeResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorResponse  *ErrorResponseMessage `protobuf:"bytes,1,opt,name=ErrorResponse,proto3,oneof" json:"ErrorResponse,omitempty"`
	SubscriptionId *string               `protobuf:"bytes,2,opt,name=SubscriptionId,proto3,oneof" json:"SubscriptionId,omitempty"`
	RequestId      string                `protobuf:"bytes,3,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	Ts             string                `protobuf:"bytes,4,opt,name=Ts,proto3" json:"Ts,omitempty"`
	Authorization  *string               `protobuf:"bytes,5,opt,name=Authorization,proto3,oneof" json:"Authorization,omitempty"`
}

func (x *SubscribeStreamMessage_SubscribeResponseMessage) Reset() {
	*x = SubscribeStreamMessage_SubscribeResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeStreamMessage_SubscribeResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeStreamMessage_SubscribeResponseMessage) ProtoMessage() {}

func (x *SubscribeStreamMessage_SubscribeResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeStreamMessage_SubscribeResponseMessage.ProtoReflect.Descriptor instead.
func (*SubscribeStreamMessage_SubscribeResponseMessage) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{8, 0}
}

func (x *SubscribeStreamMessage_SubscribeResponseMessage) GetErrorResponse() *ErrorResponseMessage {
	if x != nil {
		return x.ErrorResponse
	}
	return nil
}

func (x *SubscribeStreamMessage_SubscribeResponseMessage) GetSubscriptionId() string {
	if x != nil && x.SubscriptionId != nil {
		return *x.SubscriptionId
	}
	return ""
}

func (x *SubscribeStreamMessage_SubscribeResponseMessage) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *SubscribeStreamMessage_SubscribeResponseMessage) GetTs() string {
	if x != nil {
		return x.Ts
	}
	return ""
}

func (x *SubscribeStreamMessage_SubscribeResponseMessage) GetAuthorization() string {
	if x != nil && x.Authorization != nil {
		return *x.Authorization
	}
	return ""
}

type SubscribeStreamMessage_SubscribeEventMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId  string                                                               `protobuf:"bytes,1,opt,name=SubscriptionId,proto3" json:"SubscriptionId,omitempty"`
	SuccessResponse *SubscribeStreamMessage_SubscribeEventMessage_SuccessResponseMessage `protobuf:"bytes,2,opt,name=SuccessResponse,proto3,oneof" json:"SuccessResponse,omitempty"`
	ErrorResponse   *ErrorResponseMessage                                                `protobuf:"bytes,3,opt,name=ErrorResponse,proto3,oneof" json:"ErrorResponse,omitempty"`
	Ts              string                                                               `protobuf:"bytes,4,opt,name=Ts,proto3" json:"Ts,omitempty"`
}

func (x *SubscribeStreamMessage_SubscribeEventMessage) Reset() {
	*x = SubscribeStreamMessage_SubscribeEventMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeStreamMessage_SubscribeEventMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeStreamMessage_SubscribeEventMessage) ProtoMessage() {}

func (x *SubscribeStreamMessage_SubscribeEventMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeStreamMessage_SubscribeEventMessage.ProtoReflect.Descriptor instead.
func (*SubscribeStreamMessage_SubscribeEventMessage) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{8, 1}
}

func (x *SubscribeStreamMessage_SubscribeEventMessage) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *SubscribeStreamMessage_SubscribeEventMessage) GetSuccessResponse() *SubscribeStreamMessage_SubscribeEventMessage_SuccessResponseMessage {
	if x != nil {
		return x.SuccessResponse
	}
	return nil
}

func (x *SubscribeStreamMessage_SubscribeEventMessage) GetErrorResponse() *ErrorResponseMessage {
	if x != nil {
		return x.ErrorResponse
	}
	return nil
}

func (x *SubscribeStreamMessage_SubscribeEventMessage) GetTs() string {
	if x != nil {
		return x.Ts
	}
	return ""
}

type SubscribeStreamMessage_SubscribeEventMessage_SuccessResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataPack *DataPackages `protobuf:"bytes,1,opt,name=DataPack,proto3" json:"DataPack,omitempty"`
}

func (x *SubscribeStreamMessage_SubscribeEventMessage_SuccessResponseMessage) Reset() {
	*x = SubscribeStreamMessage_SubscribeEventMessage_SuccessResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_VISSv3_0_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeStreamMessage_SubscribeEventMessage_SuccessResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeStreamMessage_SubscribeEventMessage_SuccessResponseMessage) ProtoMessage() {}

func (x *SubscribeStreamMessage_SubscribeEventMessage_SuccessResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_VISSv3_0_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeStreamMessage_SubscribeEventMessage_SuccessResponseMessage.ProtoReflect.Descriptor instead.
func (*SubscribeStreamMessage_SubscribeEventMessage_SuccessResponseMessage) Descriptor() ([]byte, []int) {
	return file_VISSv3_0_proto_rawDescGZIP(), []int{8, 1, 0}
}

func (x *SubscribeStreamMessage_SubscribeEventMessage_SuccessResponseMessage) GetDataPack() *DataPackages {
	if x != nil {
		return x.DataPack
	}
	return nil
}

var File_VISSv3_0_proto protoreflect.FileDescriptor

var file_VISSv3_0_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x56, 0x49, 0x53, 0x53, 0x76, 0x33, 0x2e, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x14, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x14, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8a, 0x0e, 0x0a, 0x11, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x56, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x1a, 0x9c, 0x0d, 0x0a, 0x10, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x60, 0x0a,
	0x07, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x46,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x07, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12,
	0x5a, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0xde, 0x0a, 0x0a, 0x0b,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x74, 0x0a, 0x0a, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x4f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x48, 0x00, 0x52, 0x0a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x80, 0x01, 0x0a, 0x0e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x62,
	0x61, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x62, 0x61, 0x73, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48,
	0x01, 0x52, 0x0e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x62, 0x61, 0x73, 0x65,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x6f, 0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x77, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x02, 0x52, 0x0b,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x7d,
	0x0a, 0x0d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x75, 0x72, 0x76, 0x65, 0x6c, 0x6f, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x76,
	0x65, 0x6c, 0x6f, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x03, 0x52, 0x0d, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x43, 0x75, 0x72, 0x76, 0x65, 0x6c, 0x6f, 0x67, 0x88, 0x01, 0x01, 0x12, 0x7a, 0x0a,
	0x0c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x04, 0x52, 0x0c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x7d, 0x0a, 0x0d, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x52, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x48, 0x05, 0x52, 0x0d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x1a, 0x30, 0x0a, 0x0a, 0x50, 0x61, 0x74, 0x68,
	0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x1a, 0x28, 0x0a, 0x0e, 0x54, 0x69,
	0x6d, 0x65, 0x62, 0x61, 0x73, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x1a, 0x4e, 0x0a, 0x0a, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x63,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x6f, 0x75, 0x6e,
	0x64, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x6f, 0x75, 0x6e,
	0x64, 0x61, 0x72, 0x79, 0x1a, 0x47, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4c, 0x6f, 0x67, 0x69,
	0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x69, 0x66,
	0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x69, 0x66, 0x66, 0x1a, 0x41, 0x0a,
	0x0d, 0x43, 0x75, 0x72, 0x76, 0x65, 0x6c, 0x6f, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x4d, 0x61, 0x78, 0x45, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x4d, 0x61, 0x78, 0x45, 0x72, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x75, 0x66, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x42, 0x75, 0x66, 0x53, 0x69, 0x7a, 0x65,
	0x1a, 0x2e, 0x0a, 0x0c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x1a, 0x23, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x72, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x54, 0x72, 0x65, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x62, 0x61, 0x73, 0x65, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x43, 0x75, 0x72, 0x76, 0x65, 0x6c, 0x6f, 0x67, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x69, 0x0a, 0x0d,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x09, 0x0a,
	0x05, 0x50, 0x41, 0x54, 0x48, 0x53, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x49, 0x4d, 0x45,
	0x42, 0x41, 0x53, 0x45, 0x44, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x41, 0x4e, 0x47, 0x45,
	0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x03, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x55, 0x52, 0x56, 0x45, 0x4c, 0x4f, 0x47, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07,
	0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x45, 0x54,
	0x41, 0x44, 0x41, 0x54, 0x41, 0x10, 0x06, 0x22, 0xf3, 0x01, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x9e, 0x01, 0x0a,
	0x0b, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x48, 0x0a, 0x02, 0x44, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x02, 0x44, 0x70, 0x1a, 0x31, 0x0a, 0x09, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x54, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x73, 0x22, 0xa9, 0x02,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x44, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x48, 0x00, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a,
	0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61,
	0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x44, 0x61, 0x74, 0x61,
	0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0xd8, 0x04, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x3c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x24, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x6e,
	0x0a, 0x0f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x55,
	0x0a, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x01, 0x52, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x73, 0x12, 0x29, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x1a, 0x98, 0x01, 0x0a, 0x16, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43,
	0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x73, 0x48, 0x00, 0x52, 0x08, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x63, 0x6b,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x63,
	0x6b, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x12,
	0x0a, 0x10, 0x5f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xab, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x14,
	0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x29, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x21, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x22, 0xb9, 0x02, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x55, 0x0a, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21,
	0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54,
	0x73, 0x12, 0x29, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0d, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9c,
	0x02, 0x0a, 0x17, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x44,
	0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x2d, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0f, 0x44, 0x61, 0x74, 0x61,
	0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1c,
	0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x44, 0x61,
	0x74, 0x61, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xdc, 0x08,
	0x0a, 0x16, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x4d, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x4d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x66, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x5d, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x42, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x01, 0x52, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x1a, 0xae, 0x02, 0x0a, 0x18, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x55, 0x0a,
	0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x54, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x73, 0x12,
	0x29, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0xb1, 0x03, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x88, 0x01, 0x0a, 0x0f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x59, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x55,
	0x0a, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x01, 0x52, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x54, 0x73, 0x1a, 0x58, 0x0a, 0x16, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x3e, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x73, 0x52, 0x08, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x74, 0x0a, 0x19,
	0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x22, 0x84, 0x02, 0x0a, 0x1a, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x3c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x55, 0x0a, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x8a, 0x03, 0x0a, 0x0f, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a,
	0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x52, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x37, 0x0a, 0x03, 0x47, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x03, 0x47, 0x65, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x01, 0x52, 0x03, 0x53, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x49, 0x0a, 0x09,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x02, 0x52, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4f, 0x0a, 0x0b, 0x55, 0x6e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x03, 0x52, 0x0b, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x47, 0x65, 0x74,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x53, 0x65, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x55, 0x6e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0xf1, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x4d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x4d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x46,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x49, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x01, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf1, 0x01, 0x0a, 0x0a, 0x53,
	0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x4d, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x4d, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x49, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x01, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xfb,
	0x01, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x4d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x4d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4c, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x49, 0x0a, 0x06, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x01, 0x52, 0x06, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0x89, 0x02, 0x0a,
	0x12, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x4d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x4d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4e, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x51, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x01, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x28, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x01, 0x2a, 0x38, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x53,
	0x55, 0x42, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x53, 0x55, 0x42, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x2a, 0x41, 0x0a, 0x0d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x07, 0x0a,
	0x03, 0x47, 0x45, 0x54, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x45, 0x54, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x10, 0x02, 0x12, 0x0f,
	0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x10, 0x03, 0x2a,
	0x34, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52,
	0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52,
	0x45, 0x41, 0x4d, 0x10, 0x02, 0x32, 0xb4, 0x03, 0x0a, 0x04, 0x56, 0x49, 0x53, 0x53, 0x12, 0x5f,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x28, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x5f, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x28, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x71, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x1a, 0x2c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x30, 0x01, 0x12, 0x77, 0x0a, 0x12, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x30, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x04, 0x5a, 0x02,
	0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_VISSv3_0_proto_rawDescOnce sync.Once
	file_VISSv3_0_proto_rawDescData = file_VISSv3_0_proto_rawDesc
)

func file_VISSv3_0_proto_rawDescGZIP() []byte {
	file_VISSv3_0_proto_rawDescOnce.Do(func() {
		file_VISSv3_0_proto_rawDescData = protoimpl.X.CompressGZIP(file_VISSv3_0_proto_rawDescData)
	})
	return file_VISSv3_0_proto_rawDescData
}

var file_VISSv3_0_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_VISSv3_0_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_VISSv3_0_proto_goTypes = []interface{}{
	(ResponseStatus)(0),        // 0: grpcProtobufMessages.ResponseStatus
	(SubscribeResponseType)(0), // 1: grpcProtobufMessages.SubscribeResponseType
	(MessageMethod)(0),         // 2: grpcProtobufMessages.MessageMethod
	(MessageType)(0),           // 3: grpcProtobufMessages.MessageType
	(FilterExpressions_FilterExpression_FilterVariant)(0),                       // 4: grpcProtobufMessages.FilterExpressions.FilterExpression.FilterVariant
	(*ErrorResponseMessage)(nil),                                                // 5: grpcProtobufMessages.ErrorResponseMessage
	(*FilterExpressions)(nil),                                                   // 6: grpcProtobufMessages.FilterExpressions
	(*DataPackages)(nil),                                                        // 7: grpcProtobufMessages.DataPackages
	(*GetRequestMessage)(nil),                                                   // 8: grpcProtobufMessages.GetRequestMessage
	(*GetResponseMessage)(nil),                                                  // 9: grpcProtobufMessages.GetResponseMessage
	(*SetRequestMessage)(nil),                                                   // 10: grpcProtobufMessages.SetRequestMessage
	(*SetResponseMessage)(nil),                                                  // 11: grpcProtobufMessages.SetResponseMessage
	(*SubscribeRequestMessage)(nil),                                             // 12: grpcProtobufMessages.SubscribeRequestMessage
	(*SubscribeStreamMessage)(nil),                                              // 13: grpcProtobufMessages.SubscribeStreamMessage
	(*UnsubscribeRequestMessage)(nil),                                           // 14: grpcProtobufMessages.UnsubscribeRequestMessage
	(*UnsubscribeResponseMessage)(nil),                                          // 15: grpcProtobufMessages.UnsubscribeResponseMessage
	(*ProtobufMessage)(nil),                                                     // 16: grpcProtobufMessages.ProtobufMessage
	(*GetMessage)(nil),                                                          // 17: grpcProtobufMessages.GetMessage
	(*SetMessage)(nil),                                                          // 18: grpcProtobufMessages.SetMessage
	(*SubscribeMessage)(nil),                                                    // 19: grpcProtobufMessages.SubscribeMessage
	(*UnsubscribeMessage)(nil),                                                  // 20: grpcProtobufMessages.UnsubscribeMessage
	(*FilterExpressions_FilterExpression)(nil),                                  // 21: grpcProtobufMessages.FilterExpressions.FilterExpression
	(*FilterExpressions_FilterExpression_FilterValue)(nil),                      // 22: grpcProtobufMessages.FilterExpressions.FilterExpression.FilterValue
	(*FilterExpressions_FilterExpression_FilterValue_PathsValue)(nil),           // 23: grpcProtobufMessages.FilterExpressions.FilterExpression.FilterValue.PathsValue
	(*FilterExpressions_FilterExpression_FilterValue_TimebasedValue)(nil),       // 24: grpcProtobufMessages.FilterExpressions.FilterExpression.FilterValue.TimebasedValue
	(*FilterExpressions_FilterExpression_FilterValue_RangeValue)(nil),           // 25: grpcProtobufMessages.FilterExpressions.FilterExpression.FilterValue.RangeValue
	(*FilterExpressions_FilterExpression_FilterValue_ChangeValue)(nil),          // 26: grpcProtobufMessages.FilterExpressions.FilterExpression.FilterValue.ChangeValue
	(*FilterExpressions_FilterExpression_FilterValue_CurvelogValue)(nil),        // 27: grpcProtobufMessages.FilterExpressions.FilterExpression.FilterValue.CurvelogValue
	(*FilterExpressions_FilterExpression_FilterValue_HistoryValue)(nil),         // 28: grpcProtobufMessages.FilterExpressions.FilterExpression.FilterValue.HistoryValue
	(*FilterExpressions_FilterExpression_FilterValue_MetadataValue)(nil),        // 29: grpcProtobufMessages.FilterExpressions.FilterExpression.FilterValue.MetadataValue
	(*DataPackages_DataPackage)(nil),                                            // 30: grpcProtobufMessages.DataPackages.DataPackage
	(*DataPackages_DataPackage_DataPoint)(nil),                                  // 31: grpcProtobufMessages.DataPackages.DataPackage.DataPoint
	(*GetResponseMessage_SuccessResponseMessage)(nil),                           // 32: grpcProtobufMessages.GetResponseMessage.SuccessResponseMessage
	(*SubscribeStreamMessage_SubscribeResponseMessage)(nil),                     // 33: grpcProtobufMessages.SubscribeStreamMessage.SubscribeResponseMessage
	(*SubscribeStreamMessage_SubscribeEventMessage)(nil),                        // 34: grpcProtobufMessages.SubscribeStreamMessage.SubscribeEventMessage
	(*SubscribeStreamMessage_SubscribeEventMessage_SuccessResponseMessage)(nil), // 35: grpcProtobufMessages.SubscribeStreamMessage.SubscribeEventMessage.SuccessResponseMessage
}
var file_VISSv3_0_proto_depIdxs = []int32{
	21, // 0: grpcProtobufMessages.FilterExpressions.FilterExp:type_name -> grpcProtobufMessages.FilterExpressions.FilterExpression
	30, // 1: grpcProtobufMessages.DataPackages.Data:type_name -> grpcProtobufMessages.DataPackages.DataPackage
	6,  // 2: grpcProtobufMessages.GetRequestMessage.Filter:type_name -> grpcProtobufMessages.FilterExpressions
	0,  // 3: grpcProtobufMessages.GetResponseMessage.Status:type_name -> grpcProtobufMessages.ResponseStatus
	32, // 4: grpcProtobufMessages.GetResponseMessage.SuccessResponse:type_name -> grpcProtobufMessages.GetResponseMessage.SuccessResponseMessage
	5,  // 5: grpcProtobufMessages.GetResponseMessage.ErrorResponse:type_name -> grpcProtobufMessages.ErrorResponseMessage
	0,  // 6: grpcProtobufMessages.SetResponseMessage.Status:type_name -> grpcProtobufMessages.ResponseStatus
	5,  // 7: grpcProtobufMessages.SetResponseMessage.ErrorResponse:type_name -> grpcProtobufMessages.ErrorResponseMessage
	6,  // 8: grpcProtobufMessages.SubscribeRequestMessage.Filter:type_name -> grpcProtobufMessages.FilterExpressions
	1,  // 9: grpcProtobufMessages.SubscribeStreamMessage.MType:type_name -> grpcProtobufMessages.SubscribeResponseType
	0,  // 10: grpcProtobufMessages.SubscribeStreamMessage.Status:type_name -> grpcProtobufMessages.ResponseStatus
	33, // 11: grpcProtobufMessages.SubscribeStreamMessage.Response:type_name -> grpcProtobufMessages.SubscribeStreamMessage.SubscribeResponseMessage
	34, // 12: grpcProtobufMessages.SubscribeStreamMessage.Event:type_name -> grpcProtobufMessages.SubscribeStreamMessage.SubscribeEventMessage
	0,  // 13: grpcProtobufMessages.UnsubscribeResponseMessage.Status:type_name -> grpcProtobufMessages.ResponseStatus
	5,  // 14: grpcProtobufMessages.UnsubscribeResponseMessage.ErrorResponse:type_name -> grpcProtobufMessages.ErrorResponseMessage
	2,  // 15: grpcProtobufMessages.ProtobufMessage.Method:type_name -> grpcProtobufMessages.MessageMethod
	17, // 16: grpcProtobufMessages.ProtobufMessage.Get:type_name -> grpcProtobufMessages.GetMessage
	18, // 17: grpcProtobufMessages.ProtobufMessage.Set:type_name -> grpcProtobufMessages.SetMessage
	19, // 18: grpcProtobufMessages.ProtobufMessage.Subscribe:type_name -> grpcProtobufMessages.SubscribeMessage
	20, // 19: grpcProtobufMessages.ProtobufMessage.Unsubscribe:type_name -> grpcProtobufMessages.UnsubscribeMessage
	3,  // 20: grpcProtobufMessages.GetMessage.MType:type_name -> grpcProtobufMessages.MessageType
	8,  // 21: grpcProtobufMessages.GetMessage.Request:type_name -> grpcProtobufMessages.GetRequestMessage
	9,  // 22: grpcProtobufMessages.GetMessage.Response:type_name -> grpcProtobufMessages.GetResponseMessage
	3,  // 23: grpcProtobufMessages.SetMessage.MType:type_name -> grpcProtobufMessages.MessageType
	10, // 24: grpcProtobufMessages.SetMessage.Request:type_name -> grpcProtobufMessages.SetRequestMessage
	11, // 25: grpcProtobufMessages.SetMessage.Response:type_name -> grpcProtobufMessages.SetResponseMessage
	3,  // 26: grpcProtobufMessages.SubscribeMessage.MType:type_name -> grpcProtobufMessages.MessageType
	12, // 27: grpcProtobufMessages.SubscribeMessage.Request:type_name -> grpcProtobufMessages.SubscribeRequestMessage
	13, // 28: grpcProtobufMessages.SubscribeMessage.Stream:type_name -> grpcProtobufMessages.SubscribeStreamMessage
	3,  // 29: grpcProtobufMessages.UnsubscribeMessage.MType:type_name -> grpcProtobufMessages.MessageType
	14, // 30: grpcProtobufMessages.UnsubscribeMessage.Request:type_name -> grpcProtobufMessages.UnsubscribeRequestMessage
	15, // 31: grpcProtobufMessages.UnsubscribeMessage.Response:type_name -> grpcProtobufMessages.UnsubscribeResponseMessage
	4,  // 32: grpcProtobufMessages.FilterExpressions.FilterExpression.Variant:type_name -> grpcProtobufMessages.FilterExpressions.FilterExpression.FilterVariant
	22, // 33: grpcProtobufMessages.FilterExpressions.FilterExpression.Value:type_name -> grpcProtobufMessages.FilterExpressions.FilterExpression.FilterValue
	23, // 34: grpcProtobufMessages.FilterExpressions.FilterExpression.FilterValue.ValuePaths:type_name -> grpcProtobufMessages.FilterExpressions.FilterExpression.FilterValue.PathsValue
	24, // 35: grpcProtobufMessages.FilterExpressions.FilterExpression.FilterValue.ValueTimebased:type_name -> grpcProtobufMessages.FilterExpressions.FilterExpression.FilterValue.TimebasedValue
	25, // 36: grpcProtobufMessages.FilterExpressions.FilterExpression.FilterValue.ValueRange:type_name -> grpcProtobufMessages.FilterExpressions.FilterExpression.FilterValue.RangeValue
	26, // 37: grpcProtobufMessages.FilterExpressions.FilterExpression.FilterValue.ValueChange:type_name -> grpcProtobufMessages.FilterExpressions.FilterExpression.FilterValue.ChangeValue
	27, // 38: grpcProtobufMessages.FilterExpressions.FilterExpression.FilterValue.ValueCurvelog:type_name -> grpcProtobufMessages.FilterExpressions.FilterExpression.FilterValue.CurvelogValue
	28, // 39: grpcProtobufMessages.FilterExpressions.FilterExpression.FilterValue.ValueHistory:type_name -> grpcProtobufMessages.FilterExpressions.FilterExpression.FilterValue.HistoryValue
	29, // 40: grpcProtobufMessages.FilterExpressions.FilterExpression.FilterValue.ValueMetadata:type_name -> grpcProtobufMessages.FilterExpressions.FilterExpression.FilterValue.MetadataValue
	31, // 41: grpcProtobufMessages.DataPackages.DataPackage.Dp:type_name -> grpcProtobufMessages.DataPackages.DataPackage.DataPoint
	7,  // 42: grpcProtobufMessages.GetResponseMessage.SuccessResponseMessage.DataPack:type_name -> grpcProtobufMessages.DataPackages
	5,  // 43: grpcProtobufMessages.SubscribeStreamMessage.SubscribeResponseMessage.ErrorResponse:type_name -> grpcProtobufMessages.ErrorResponseMessage
	35, // 44: grpcProtobufMessages.SubscribeStreamMessage.SubscribeEventMessage.SuccessResponse:type_name -> grpcProtobufMessages.SubscribeStreamMessage.SubscribeEventMessage.SuccessResponseMessage
	5,  // 45: grpcProtobufMessages.SubscribeStreamMessage.SubscribeEventMessage.ErrorResponse:type_name -> grpcProtobufMessages.ErrorResponseMessage
	7,  // 46: grpcProtobufMessages.SubscribeStreamMessage.SubscribeEventMessage.SuccessResponseMessage.DataPack:type_name -> grpcProtobufMessages.DataPackages
	8,  // 47: grpcProtobufMessages.VISS.GetRequest:input_type -> grpcProtobufMessages.GetRequestMessage
	10, // 48: grpcProtobufMessages.VISS.SetRequest:input_type -> grpcProtobufMessages.SetRequestMessage
	12, // 49: grpcProtobufMessages.VISS.SubscribeRequest:input_type -> grpcProtobufMessages.SubscribeRequestMessage
	14, // 50: grpcProtobufMessages.VISS.UnsubscribeRequest:input_type -> grpcProtobufMessages.UnsubscribeRequestMessage
	9,  // 51: grpcProtobufMessages.VISS.GetRequest:output_type -> grpcProtobufMessages.GetResponseMessage
	11, // 52: grpcProtobufMessages.VISS.SetRequest:output_type -> grpcProtobufMessages.SetResponseMessage
	13, // 53: grpcProtobufMessages.VISS.SubscribeRequest:output_type -> grpcProtobufMessages.SubscribeStreamMessage
	15, // 54: grpcProtobufMessages.VISS.UnsubscribeRequest:output_type -> grpcProtobufMessages.UnsubscribeResponseMessage
	51, // [51:55] is the sub-list for method output_type
	47, // [47:51] is the sub-list for method input_type
	47, // [47:47] is the sub-list for extension type_name
	47, // [47:47] is the sub-list for extension extendee
	0,  // [0:47] is the sub-list for field type_name
}

func init() { file_VISSv3_0_proto_init() }
func file_VISSv3_0_proto_init() {
	if File_VISSv3_0_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_VISSv3_0_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExpressions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPackages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRequestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeStreamMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeRequestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtobufMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExpressions_FilterExpression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExpressions_FilterExpression_FilterValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExpressions_FilterExpression_FilterValue_PathsValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExpressions_FilterExpression_FilterValue_TimebasedValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExpressions_FilterExpression_FilterValue_RangeValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExpressions_FilterExpression_FilterValue_ChangeValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExpressions_FilterExpression_FilterValue_CurvelogValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExpressions_FilterExpression_FilterValue_HistoryValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExpressions_FilterExpression_FilterValue_MetadataValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPackages_DataPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPackages_DataPackage_DataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponseMessage_SuccessResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeStreamMessage_SubscribeResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeStreamMessage_SubscribeEventMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_VISSv3_0_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeStreamMessage_SubscribeEventMessage_SuccessResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_VISSv3_0_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_VISSv3_0_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_VISSv3_0_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_VISSv3_0_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_VISSv3_0_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_VISSv3_0_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_VISSv3_0_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_VISSv3_0_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_VISSv3_0_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_VISSv3_0_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_VISSv3_0_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_VISSv3_0_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_VISSv3_0_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_VISSv3_0_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_VISSv3_0_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_VISSv3_0_proto_msgTypes[27].OneofWrappers = []interface{}{}
	file_VISSv3_0_proto_msgTypes[28].OneofWrappers = []interface{}{}
	file_VISSv3_0_proto_msgTypes[29].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_VISSv3_0_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_VISSv3_0_proto_goTypes,
		DependencyIndexes: file_VISSv3_0_proto_depIdxs,
		EnumInfos:         file_VISSv3_0_proto_enumTypes,
		MessageInfos:      file_VISSv3_0_proto_msgTypes,
	}.Build()
	File_VISSv3_0_proto = out.File
	file_VISSv3_0_proto_rawDesc = nil
	file_VISSv3_0_proto_goTypes = nil
	file_VISSv3_0_proto_depIdxs = nil
}
